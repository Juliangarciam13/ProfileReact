{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/AppReact/newapp/src/App.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.scss\";\n/*Esto importa el useStategancho del reactpaquete \n  e importa los estilos del App.scssarchivo. */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  /*Esta línea inicializa una variable de estado llamada \n  data y una función para actualizar esa variable de estado \n  llamada setData. El useStategancho se usa para crear esta variable\n   de estado y establecer su valor inicial en un objeto con emailpropiedades \n   password establecidas en cadenas vacías. */\n\n  const changeData = e => {\n    setData({\n      ...data,\n      [e.target.name]: e.target.value\n    });\n  };\n  /*Esta es una función de controlador de eventos que actualiza la datavariable de \n  estado cuando el usuario escribe algo en los campos de correo electrónico o contraseña. \n  Utiliza las propiedades e.target.namey e.target.valuepara actualizar la propiedad adecuada \n  en el dataobjeto. */\n\n  const submit = async e => {\n    e.preventDefault();\n    /*Esta es una función de controlador de eventos que se llama cuando el usuario envía el formulario. \n    Evita el comportamiento predeterminado de envío de formularios y muestra una alerta con un mensaje de bienvenida.*/\n    const response = await fetch('/submit-form', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    if (response.ok) {\n      alert(\"¡Bienvenido!\");\n    } else {\n      alert(\"Ocurrió un error al enviar el formulario.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ed-grid\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ed-container l-30\",\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ed-item form__item\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: [\"Correo Electronico\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            id: \"email\",\n            value: data.email,\n            onChange: changeData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ed-item form__item\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: [\"Contrase\\xF1a\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            id: \"password\",\n            value: data.password,\n            onChange: changeData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ed-item form__item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Ingresar\",\n        className: \"button full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n};\n/*Este es el código JSX que define la estructura y el comportamiento del formulario. El formulario está envuelto en un \ndiv elemento con un classNamede ed-grid. El formulario en sí es un ed-containerelemento con un ancho del 30% y contiene dos \ncampos de formulario para correo electrónico y contraseña. Cada campo de entrada está envuelto en un labelelemento y tiene un \nonChangeatributo que llama a la changeDatafunción. La submitfunción se llama cuando se envía el formulario, como lo indica el \nonSubmit atributo en el formelemento. */\n_s(App, \"hAiMabL5oJ0V6obpUlZb0+68sQ4=\");\n_c = App;\nexport default App;\n/*Esto exporta el Appcomponente como la exportación predeterminada, por lo que se puede usar en otras partes de la base de código. */\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","data","setData","email","password","changeData","e","target","name","value","submit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","alert","className","children","onSubmit","htmlFor","type","id","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/macbook/Desktop/AppReact/newapp/src/App.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.scss\";\n/*Esto importa el useStategancho del reactpaquete \n  e importa los estilos del App.scssarchivo. */\nconst App = () => {\n\n  const [data, setData] = useState({ email: \"\", password: \"\"})\n  /*Esta línea inicializa una variable de estado llamada \n  data y una función para actualizar esa variable de estado \n  llamada setData. El useStategancho se usa para crear esta variable\n   de estado y establecer su valor inicial en un objeto con emailpropiedades \n   password establecidas en cadenas vacías. */\n\n  const changeData = e => {\n    setData({\n      ...data,\n      [e.target.name]: e.target.value\n    })\n  }\n  /*Esta es una función de controlador de eventos que actualiza la datavariable de \n  estado cuando el usuario escribe algo en los campos de correo electrónico o contraseña. \n  Utiliza las propiedades e.target.namey e.target.valuepara actualizar la propiedad adecuada \n  en el dataobjeto. */\n\n  const submit = async e => {\n    e.preventDefault()\n    /*Esta es una función de controlador de eventos que se llama cuando el usuario envía el formulario. \n    Evita el comportamiento predeterminado de envío de formularios y muestra una alerta con un mensaje de bienvenida.*/\n    const response = await fetch('/submit-form', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    })\n\n    if (response.ok) {\n      alert(\"¡Bienvenido!\")\n    } else {\n      alert(\"Ocurrió un error al enviar el formulario.\")\n    }\n  }\n\n  return (\n  <div className=\"ed-grid\">\n    <form className=\"ed-container l-30\" onSubmit={submit}>\n      <div className=\"ed-item form__item\">\n        <label htmlFor=\"email\">\n          Correo Electronico\n          <input \n          type=\"email\" \n          name=\"email\" \n          id=\"email\" \n          value={data.email} \n          onChange={changeData} \n          />\n        </label>\n      </div>\n      <div className=\"ed-item form__item\">\n        <label htmlFor=\"password\">\n          Contraseña\n          <input \n          type=\"password\" \n          name=\"password\" \n          id=\"password\"\n          value={data.password}\n          onChange={changeData}\n          />\n        </label>\n      </div>\n      <div className=\"ed-item form__item\"></div>\n      <input type=\"submit\" value=\"Ingresar\" className=\"button full\"/>\n    </form>\n  </div>\n  )\n}\n/*Este es el código JSX que define la estructura y el comportamiento del formulario. El formulario está envuelto en un \ndiv elemento con un classNamede ed-grid. El formulario en sí es un ed-containerelemento con un ancho del 30% y contiene dos \ncampos de formulario para correo electrónico y contraseña. Cada campo de entrada está envuelto en un labelelemento y tiene un \nonChangeatributo que llama a la changeDatafunción. La submitfunción se llama cuando se envía el formulario, como lo indica el \nonSubmit atributo en el formelemento. */\n\nexport default App;\n/*Esto exporta el Appcomponente como la exportación predeterminada, por lo que se puede usar en otras partes de la base de código. */\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}