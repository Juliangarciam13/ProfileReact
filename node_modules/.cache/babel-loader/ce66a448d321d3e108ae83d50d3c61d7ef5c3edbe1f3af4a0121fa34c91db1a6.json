{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/AppReact/newapp/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nconst express = require('express');\nconst app = express();\nconst port = 3000;\nconst xlsx = require('xlsx');\n\n// Handle form submissions\napp.post('/submit-form', (req, res) => {\n  const {\n    email,\n    password\n  } = req.body;\n\n  // Load the Excel file\n  const workbook = xlsx.readFile('./DataLogin.xlsx');\n  const sheetName = 'Hoja1';\n\n  // Add the form data to the Excel sheet\n  const worksheet = workbook.Sheets[sheetName];\n  const newRow = xlsx.utils.addRow(worksheet, [email, password]);\n\n  // Save the changes to the Excel file\n  xlsx.writeFile(workbook, './DataLogin.xlsx');\n  res.sendStatus(200);\n});\napp.listen(port, () => {\n  console.log(`Server running at http://localhost:${port}`);\n});","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","express","require","app","port","xlsx","post","req","res","email","password","body","workbook","readFile","sheetName","worksheet","Sheets","newRow","utils","addRow","writeFile","sendStatus","listen","console","log"],"sources":["/Users/macbook/Desktop/AppReact/newapp/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nconst express = require('express')\nconst app = express()\nconst port = 3000\nconst xlsx = require('xlsx')\n\n// Handle form submissions\napp.post('/submit-form', (req, res) => {\n  const { email, password } = req.body\n\n  // Load the Excel file\n  const workbook = xlsx.readFile('./DataLogin.xlsx')\n  const sheetName = 'Hoja1'\n\n  // Add the form data to the Excel sheet\n  const worksheet = workbook.Sheets[sheetName]\n  const newRow = xlsx.utils.addRow(worksheet, [email, password])\n\n  // Save the changes to the Excel file\n  xlsx.writeFile(workbook, './DataLogin.xlsx')\n\n  res.sendStatus(200)\n})\n\napp.listen(port, () => {\n  console.log(`Server running at http://localhost:${port}`)\n})\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,IAAI,GAAGL,QAAQ,CAACM,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTL,OAAA,CAACL,KAAK,CAACW,UAAU;EAAAC,QAAA,eACfP,OAAA,CAACH,GAAG;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC;;AAED;AACA;AACA;AACAb,eAAe,CAAC,CAAC;AACjB,MAAMc,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,GAAG,GAAGF,OAAO,CAAC,CAAC;AACrB,MAAMG,IAAI,GAAG,IAAI;AACjB,MAAMC,IAAI,GAAGH,OAAO,CAAC,MAAM,CAAC;;AAE5B;AACAC,GAAG,CAACG,IAAI,CAAC,cAAc,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACrC,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGH,GAAG,CAACI,IAAI;;EAEpC;EACA,MAAMC,QAAQ,GAAGP,IAAI,CAACQ,QAAQ,CAAC,kBAAkB,CAAC;EAClD,MAAMC,SAAS,GAAG,OAAO;;EAEzB;EACA,MAAMC,SAAS,GAAGH,QAAQ,CAACI,MAAM,CAACF,SAAS,CAAC;EAC5C,MAAMG,MAAM,GAAGZ,IAAI,CAACa,KAAK,CAACC,MAAM,CAACJ,SAAS,EAAE,CAACN,KAAK,EAAEC,QAAQ,CAAC,CAAC;;EAE9D;EACAL,IAAI,CAACe,SAAS,CAACR,QAAQ,EAAE,kBAAkB,CAAC;EAE5CJ,GAAG,CAACa,UAAU,CAAC,GAAG,CAAC;AACrB,CAAC,CAAC;AAEFlB,GAAG,CAACmB,MAAM,CAAClB,IAAI,EAAE,MAAM;EACrBmB,OAAO,CAACC,GAAG,CAAE,sCAAqCpB,IAAK,EAAC,CAAC;AAC3D,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}